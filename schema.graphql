### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Return data for authenticated users"""
type AuthPayload {
  token: String!
  user: User!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

"""Required data to login the user"""
input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  deleteUser(id: ID!): User
  login(data: LoginInput!): AuthPayload
  signup(data: SignupInput!): AuthPayload
  updateUser(data: UserUpdateInput!, id: ID!): User
}

type Query {
  getMyUser: User
  getUser(id: ID!): User
  getUsers: [User!]!
  refreshToken: AuthPayload
}

"""Role of the User"""
enum Role {
  ADMIN
  USER
}

"""Required data to make an account"""
input SignupInput {
  email: String!
  password: String!
  repeatPassword: String!
}

"""User model from the database"""
type User {
  email: EmailAddress!
  id: ID!
  role: Role!
}

input UserUpdateInput {
  email: EmailAddress!
  password: String!
}